name: Test Discord Notification

on:
  workflow_dispatch: # Manual trigger only

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Test Discord notification
      env:
        DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      run: |
        # Create test script
        cat > test_discord.js << 'EOF'
        const https = require('https');
        
        const DISCORD_WEBHOOK_URL = process.env.DISCORD_WEBHOOK_URL;
        
        // Function to send Discord notification (same as main script)
        function sendDiscordNotification(message) {
          return new Promise((resolve, reject) => {
            const url = new URL(DISCORD_WEBHOOK_URL);
            
            // Clean the message to avoid JSON issues
            const cleanMessage = message
              .replace(/[\u0000-\u001F\u007F-\u009F]/g, '') // Remove control characters
              .replace(/"/g, '\\"') // Escape quotes
              .replace(/\\/g, '\\\\') // Escape backslashes
              .substring(0, 1900); // Discord has a 2000 char limit
            
            const payload = JSON.stringify({
              content: cleanMessage,
              username: 'AFGL Tournament Monitor'
            });
            
            console.log(`Payload length: ${payload.length}`);
            console.log(`Payload preview: ${payload.substring(0, 200)}...`);
            console.log(`Full payload: ${payload}`);
            
            const options = {
              hostname: url.hostname,
              path: url.pathname + url.search,
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'Content-Length': Buffer.byteLength(payload, 'utf8')
              }
            };
            
            const req = https.request(options, (res) => {
              let responseData = '';
              res.on('data', chunk => responseData += chunk);
              res.on('end', () => {
                console.log(`Discord response status: ${res.statusCode}`);
                if (res.statusCode !== 204 && res.statusCode !== 200) {
                  console.log(`Discord response: ${responseData}`);
                } else {
                  console.log('Discord notification sent successfully!');
                }
                resolve(res.statusCode);
              });
            });
            
            req.on('error', (error) => {
              console.error('Discord webhook error:', error);
              reject(error);
            });
            req.write(payload);
            req.end();
          });
        }
        
        async function testNotification() {
          try {
            const testMessage = `üèÜ **AFGL Tournament Schedule Updated!**\n\nThe tournament schedule has been updated: https://afgl.bluegolf.com/bluegolf/afgl25/schedule/index.htm\n\nCheck for new tournaments, date changes, or other updates!\n\nTime: ${new Date().toISOString()}`;
            
            console.log('Testing Discord notification with actual message format...');
            await sendDiscordNotification(testMessage);
            console.log('Test completed!');
            
          } catch (error) {
            console.error('Test failed:', error);
          }
        }
        
        testNotification();
        EOF
        
        # Run the test
        node test_discord.js
